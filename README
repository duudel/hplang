hplang
------

Team members:
Henrik Paananen
henrik.j.paananen@student.jyu.fi

The language will be procedural with:
- static typing
- simple type inference
- a few primitive datatypes:
 - signed & unsigned integers of sizes 8, 16, 32 and 64 bits
 - boolean
 - 8 bit character
 - raw pointers

these features have less priority:
- multiple return values from procedures
- possibility to define structures containing other types
- string datatype
- floating point numbers of sizes 32 and 64
- compile time code execution (for meta programming)

Sample programs are found in "samples" directory.

The target language is AMD64 for Windows (and maybe Linux).
(I may change the target language to LLVM.)


; A simple program that prints the team name.
; Written for AMD64 on Windows (for NASM).

global main
extern puts
section .text

main:
    ; prologue
    push    rsp                 ; stack is aligned by 16
    mov     rbp,    rsp
    sub     rsp,    0x20        ; allocate 32 bytes "shadow space" needed by
                                ; called functions

    lea     rcx,    [team_name]
    call    puts                ; print team name

    mov     eax,    0           ; return 0
    ; epilogoue
    mov     rsp,    rbp
    pop     rbp
    ret

team_name:
    db "hplang", 0

